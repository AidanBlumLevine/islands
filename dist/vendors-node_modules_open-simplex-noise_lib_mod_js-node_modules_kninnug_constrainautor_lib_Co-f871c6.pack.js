"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkislands"] = self["webpackChunkislands"] || []).push([["vendors-node_modules_open-simplex-noise_lib_mod_js-node_modules_kninnug_constrainautor_lib_Co-f871c6"],{

/***/ "./node_modules/open-simplex-noise/lib/2d.js":
/*!***************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/2d.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This is free and unencumbered software released into the public domain\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeNoise2D = void 0;\nvar shuffle_seed_1 = __webpack_require__(/*! ./shuffle_seed */ \"./node_modules/open-simplex-noise/lib/shuffle_seed.js\");\nvar NORM_2D = 1.0 / 47.0;\nvar SQUISH_2D = (Math.sqrt(2 + 1) - 1) / 2;\nvar STRETCH_2D = (1 / Math.sqrt(2 + 1) - 1) / 2;\nfunction contribution2D(multiplier, xsb, ysb) {\n    return {\n        dx: -xsb - multiplier * SQUISH_2D,\n        dy: -ysb - multiplier * SQUISH_2D,\n        xsb: xsb,\n        ysb: ysb,\n    };\n}\nfunction makeNoise2D(clientSeed) {\n    var contributions = [];\n    for (var i = 0; i < p2D.length; i += 4) {\n        var baseSet = base2D[p2D[i]];\n        var previous = null;\n        var current = null;\n        for (var k = 0; k < baseSet.length; k += 3) {\n            current = contribution2D(baseSet[k], baseSet[k + 1], baseSet[k + 2]);\n            if (previous === null)\n                contributions[i / 4] = current;\n            else\n                previous.next = current;\n            previous = current;\n        }\n        current.next = contribution2D(p2D[i + 1], p2D[i + 2], p2D[i + 3]);\n    }\n    var lookup = [];\n    for (var i = 0; i < lookupPairs2D.length; i += 2) {\n        lookup[lookupPairs2D[i]] = contributions[lookupPairs2D[i + 1]];\n    }\n    var perm = new Uint8Array(256);\n    var perm2D = new Uint8Array(256);\n    var source = new Uint8Array(256);\n    for (var i = 0; i < 256; i++)\n        source[i] = i;\n    var seed = new Uint32Array(1);\n    seed[0] = clientSeed;\n    seed = shuffle_seed_1.default(shuffle_seed_1.default(shuffle_seed_1.default(seed)));\n    for (var i = 255; i >= 0; i--) {\n        seed = shuffle_seed_1.default(seed);\n        var r = new Uint32Array(1);\n        r[0] = (seed[0] + 31) % (i + 1);\n        if (r[0] < 0)\n            r[0] += i + 1;\n        perm[i] = source[r[0]];\n        perm2D[i] = perm[i] & 0x0e;\n        source[r[0]] = source[i];\n    }\n    return function (x, y) {\n        var stretchOffset = (x + y) * STRETCH_2D;\n        var xs = x + stretchOffset;\n        var ys = y + stretchOffset;\n        var xsb = Math.floor(xs);\n        var ysb = Math.floor(ys);\n        var squishOffset = (xsb + ysb) * SQUISH_2D;\n        var dx0 = x - (xsb + squishOffset);\n        var dy0 = y - (ysb + squishOffset);\n        var xins = xs - xsb;\n        var yins = ys - ysb;\n        var inSum = xins + yins;\n        var hash = (xins - yins + 1) |\n            (inSum << 1) |\n            ((inSum + yins) << 2) |\n            ((inSum + xins) << 4);\n        var value = 0;\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\n            var dx = dx0 + c.dx;\n            var dy = dy0 + c.dy;\n            var attn = 2 - dx * dx - dy * dy;\n            if (attn > 0) {\n                var px = xsb + c.xsb;\n                var py = ysb + c.ysb;\n                var indexPartA = perm[px & 0xff];\n                var index = perm2D[(indexPartA + py) & 0xff];\n                var valuePart = gradients2D[index] * dx + gradients2D[index + 1] * dy;\n                value += attn * attn * attn * attn * valuePart;\n            }\n        }\n        return value * NORM_2D;\n    };\n}\nexports.makeNoise2D = makeNoise2D;\nvar base2D = [\n    [1, 1, 0, 1, 0, 1, 0, 0, 0],\n    [1, 1, 0, 1, 0, 1, 2, 1, 1],\n];\nvar gradients2D = [\n    5,\n    2,\n    2,\n    5,\n    -5,\n    2,\n    -2,\n    5,\n    5,\n    -2,\n    2,\n    -5,\n    -5,\n    -2,\n    -2,\n    -5,\n];\nvar lookupPairs2D = [\n    0,\n    1,\n    1,\n    0,\n    4,\n    1,\n    17,\n    0,\n    20,\n    2,\n    21,\n    2,\n    22,\n    5,\n    23,\n    5,\n    26,\n    4,\n    39,\n    3,\n    42,\n    4,\n    43,\n    3,\n];\nvar p2D = [\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    1,\n    2,\n    2,\n    0,\n    1,\n    2,\n    0,\n    2,\n    1,\n    0,\n    0,\n    0,\n];\n\n\n//# sourceURL=webpack://islands/./node_modules/open-simplex-noise/lib/2d.js?");

/***/ }),

/***/ "./node_modules/open-simplex-noise/lib/3d.js":
/*!***************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/3d.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This is free and unencumbered software released into the public domain\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeNoise3D = void 0;\nvar shuffle_seed_1 = __webpack_require__(/*! ./shuffle_seed */ \"./node_modules/open-simplex-noise/lib/shuffle_seed.js\");\nvar NORM_3D = 1.0 / 103.0;\nvar SQUISH_3D = (Math.sqrt(3 + 1) - 1) / 3;\nvar STRETCH_3D = (1 / Math.sqrt(3 + 1) - 1) / 3;\nfunction contribution3D(multiplier, xsb, ysb, zsb) {\n    return {\n        dx: -xsb - multiplier * SQUISH_3D,\n        dy: -ysb - multiplier * SQUISH_3D,\n        dz: -zsb - multiplier * SQUISH_3D,\n        xsb: xsb,\n        ysb: ysb,\n        zsb: zsb,\n    };\n}\nfunction makeNoise3D(clientSeed) {\n    var contributions = [];\n    for (var i = 0; i < p3D.length; i += 9) {\n        var baseSet = base3D[p3D[i]];\n        var previous = null;\n        var current = null;\n        for (var k = 0; k < baseSet.length; k += 4) {\n            current = contribution3D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3]);\n            if (previous === null)\n                contributions[i / 9] = current;\n            else\n                previous.next = current;\n            previous = current;\n        }\n        current.next = contribution3D(p3D[i + 1], p3D[i + 2], p3D[i + 3], p3D[i + 4]);\n        current.next.next = contribution3D(p3D[i + 5], p3D[i + 6], p3D[i + 7], p3D[i + 8]);\n    }\n    var lookup = [];\n    for (var i = 0; i < lookupPairs3D.length; i += 2) {\n        lookup[lookupPairs3D[i]] = contributions[lookupPairs3D[i + 1]];\n    }\n    var perm = new Uint8Array(256);\n    var perm3D = new Uint8Array(256);\n    var source = new Uint8Array(256);\n    for (var i = 0; i < 256; i++)\n        source[i] = i;\n    var seed = new Uint32Array(1);\n    seed[0] = clientSeed;\n    seed = shuffle_seed_1.default(shuffle_seed_1.default(shuffle_seed_1.default(seed)));\n    for (var i = 255; i >= 0; i--) {\n        seed = shuffle_seed_1.default(seed);\n        var r = new Uint32Array(1);\n        r[0] = (seed[0] + 31) % (i + 1);\n        if (r[0] < 0)\n            r[0] += i + 1;\n        perm[i] = source[r[0]];\n        perm3D[i] = (perm[i] % 24) * 3;\n        source[r[0]] = source[i];\n    }\n    return function (x, y, z) {\n        var stretchOffset = (x + y + z) * STRETCH_3D;\n        var xs = x + stretchOffset;\n        var ys = y + stretchOffset;\n        var zs = z + stretchOffset;\n        var xsb = Math.floor(xs);\n        var ysb = Math.floor(ys);\n        var zsb = Math.floor(zs);\n        var squishOffset = (xsb + ysb + zsb) * SQUISH_3D;\n        var dx0 = x - (xsb + squishOffset);\n        var dy0 = y - (ysb + squishOffset);\n        var dz0 = z - (zsb + squishOffset);\n        var xins = xs - xsb;\n        var yins = ys - ysb;\n        var zins = zs - zsb;\n        var inSum = xins + yins + zins;\n        var hash = (yins - zins + 1) |\n            ((xins - yins + 1) << 1) |\n            ((xins - zins + 1) << 2) |\n            (inSum << 3) |\n            ((inSum + zins) << 5) |\n            ((inSum + yins) << 7) |\n            ((inSum + xins) << 9);\n        var value = 0;\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\n            var dx = dx0 + c.dx;\n            var dy = dy0 + c.dy;\n            var dz = dz0 + c.dz;\n            var attn = 2 - dx * dx - dy * dy - dz * dz;\n            if (attn > 0) {\n                var px = xsb + c.xsb;\n                var py = ysb + c.ysb;\n                var pz = zsb + c.zsb;\n                var indexPartA = perm[px & 0xff];\n                var indexPartB = perm[(indexPartA + py) & 0xff];\n                var index = perm3D[(indexPartB + pz) & 0xff];\n                var valuePart = gradients3D[index] * dx +\n                    gradients3D[index + 1] * dy +\n                    gradients3D[index + 2] * dz;\n                value += attn * attn * attn * attn * valuePart;\n            }\n        }\n        return value * NORM_3D;\n    };\n}\nexports.makeNoise3D = makeNoise3D;\nvar base3D = [\n    [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\n    [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1],\n    [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1],\n];\nvar gradients3D = [\n    -11,\n    4,\n    4,\n    -4,\n    11,\n    4,\n    -4,\n    4,\n    11,\n    11,\n    4,\n    4,\n    4,\n    11,\n    4,\n    4,\n    4,\n    11,\n    -11,\n    -4,\n    4,\n    -4,\n    -11,\n    4,\n    -4,\n    -4,\n    11,\n    11,\n    -4,\n    4,\n    4,\n    -11,\n    4,\n    4,\n    -4,\n    11,\n    -11,\n    4,\n    -4,\n    -4,\n    11,\n    -4,\n    -4,\n    4,\n    -11,\n    11,\n    4,\n    -4,\n    4,\n    11,\n    -4,\n    4,\n    4,\n    -11,\n    -11,\n    -4,\n    -4,\n    -4,\n    -11,\n    -4,\n    -4,\n    -4,\n    -11,\n    11,\n    -4,\n    -4,\n    4,\n    -11,\n    -4,\n    4,\n    -4,\n    -11,\n];\nvar lookupPairs3D = [\n    0,\n    2,\n    1,\n    1,\n    2,\n    2,\n    5,\n    1,\n    6,\n    0,\n    7,\n    0,\n    32,\n    2,\n    34,\n    2,\n    129,\n    1,\n    133,\n    1,\n    160,\n    5,\n    161,\n    5,\n    518,\n    0,\n    519,\n    0,\n    546,\n    4,\n    550,\n    4,\n    645,\n    3,\n    647,\n    3,\n    672,\n    5,\n    673,\n    5,\n    674,\n    4,\n    677,\n    3,\n    678,\n    4,\n    679,\n    3,\n    680,\n    13,\n    681,\n    13,\n    682,\n    12,\n    685,\n    14,\n    686,\n    12,\n    687,\n    14,\n    712,\n    20,\n    714,\n    18,\n    809,\n    21,\n    813,\n    23,\n    840,\n    20,\n    841,\n    21,\n    1198,\n    19,\n    1199,\n    22,\n    1226,\n    18,\n    1230,\n    19,\n    1325,\n    23,\n    1327,\n    22,\n    1352,\n    15,\n    1353,\n    17,\n    1354,\n    15,\n    1357,\n    17,\n    1358,\n    16,\n    1359,\n    16,\n    1360,\n    11,\n    1361,\n    10,\n    1362,\n    11,\n    1365,\n    10,\n    1366,\n    9,\n    1367,\n    9,\n    1392,\n    11,\n    1394,\n    11,\n    1489,\n    10,\n    1493,\n    10,\n    1520,\n    8,\n    1521,\n    8,\n    1878,\n    9,\n    1879,\n    9,\n    1906,\n    7,\n    1910,\n    7,\n    2005,\n    6,\n    2007,\n    6,\n    2032,\n    8,\n    2033,\n    8,\n    2034,\n    7,\n    2037,\n    6,\n    2038,\n    7,\n    2039,\n    6,\n];\nvar p3D = [\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    1,\n    0,\n    -1,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    1,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    2,\n    1,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    2,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    2,\n    1,\n    0,\n    3,\n    1,\n    2,\n    0,\n    1,\n    3,\n    2,\n    0,\n    1,\n    3,\n    1,\n    0,\n    2,\n    1,\n    3,\n    0,\n    2,\n    1,\n    3,\n    0,\n    1,\n    2,\n    1,\n    1,\n    1,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    1,\n    1,\n    0,\n    1,\n    0,\n    2,\n    0,\n    2,\n    0,\n    1,\n    1,\n    0,\n    0,\n    1,\n    2,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    0,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    3,\n    1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    2,\n    3,\n    1,\n    1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    2,\n    0,\n];\n\n\n//# sourceURL=webpack://islands/./node_modules/open-simplex-noise/lib/3d.js?");

/***/ }),

/***/ "./node_modules/open-simplex-noise/lib/4d.js":
/*!***************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/4d.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This is free and unencumbered software released into the public domain\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeNoise4D = void 0;\nvar shuffle_seed_1 = __webpack_require__(/*! ./shuffle_seed */ \"./node_modules/open-simplex-noise/lib/shuffle_seed.js\");\nvar NORM_4D = 1.0 / 30.0;\nvar SQUISH_4D = (Math.sqrt(4 + 1) - 1) / 4;\nvar STRETCH_4D = (1 / Math.sqrt(4 + 1) - 1) / 4;\nfunction contribution4D(multiplier, xsb, ysb, zsb, wsb) {\n    return {\n        dx: -xsb - multiplier * SQUISH_4D,\n        dy: -ysb - multiplier * SQUISH_4D,\n        dz: -zsb - multiplier * SQUISH_4D,\n        dw: -wsb - multiplier * SQUISH_4D,\n        xsb: xsb,\n        ysb: ysb,\n        zsb: zsb,\n        wsb: wsb,\n    };\n}\nfunction makeNoise4D(clientSeed) {\n    var contributions = [];\n    for (var i = 0; i < p4D.length; i += 16) {\n        var baseSet = base4D[p4D[i]];\n        var previous = null;\n        var current = null;\n        for (var k = 0; k < baseSet.length; k += 5) {\n            current = contribution4D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3], baseSet[k + 4]);\n            if (previous === null)\n                contributions[i / 16] = current;\n            else\n                previous.next = current;\n            previous = current;\n        }\n        current.next = contribution4D(p4D[i + 1], p4D[i + 2], p4D[i + 3], p4D[i + 4], p4D[i + 5]);\n        current.next.next = contribution4D(p4D[i + 6], p4D[i + 7], p4D[i + 8], p4D[i + 9], p4D[i + 10]);\n        current.next.next.next = contribution4D(p4D[i + 11], p4D[i + 12], p4D[i + 13], p4D[i + 14], p4D[i + 15]);\n    }\n    var lookup = [];\n    for (var i = 0; i < lookupPairs4D.length; i += 2) {\n        lookup[lookupPairs4D[i]] = contributions[lookupPairs4D[i + 1]];\n    }\n    var perm = new Uint8Array(256);\n    var perm4D = new Uint8Array(256);\n    var source = new Uint8Array(256);\n    for (var i = 0; i < 256; i++)\n        source[i] = i;\n    var seed = new Uint32Array(1);\n    seed[0] = clientSeed;\n    seed = shuffle_seed_1.default(shuffle_seed_1.default(shuffle_seed_1.default(seed)));\n    for (var i = 255; i >= 0; i--) {\n        seed = shuffle_seed_1.default(seed);\n        var r = new Uint32Array(1);\n        r[0] = (seed[0] + 31) % (i + 1);\n        if (r[0] < 0)\n            r[0] += i + 1;\n        perm[i] = source[r[0]];\n        perm4D[i] = perm[i] & 0xfc;\n        source[r[0]] = source[i];\n    }\n    return function (x, y, z, w) {\n        var stretchOffset = (x + y + z + w) * STRETCH_4D;\n        var xs = x + stretchOffset;\n        var ys = y + stretchOffset;\n        var zs = z + stretchOffset;\n        var ws = w + stretchOffset;\n        var xsb = Math.floor(xs);\n        var ysb = Math.floor(ys);\n        var zsb = Math.floor(zs);\n        var wsb = Math.floor(ws);\n        var squishOffset = (xsb + ysb + zsb + wsb) * SQUISH_4D;\n        var dx0 = x - (xsb + squishOffset);\n        var dy0 = y - (ysb + squishOffset);\n        var dz0 = z - (zsb + squishOffset);\n        var dw0 = w - (wsb + squishOffset);\n        var xins = xs - xsb;\n        var yins = ys - ysb;\n        var zins = zs - zsb;\n        var wins = ws - wsb;\n        var inSum = xins + yins + zins + wins;\n        var hash = (zins - wins + 1) |\n            ((yins - zins + 1) << 1) |\n            ((yins - wins + 1) << 2) |\n            ((xins - yins + 1) << 3) |\n            ((xins - zins + 1) << 4) |\n            ((xins - wins + 1) << 5) |\n            (inSum << 6) |\n            ((inSum + wins) << 8) |\n            ((inSum + zins) << 11) |\n            ((inSum + yins) << 14) |\n            ((inSum + xins) << 17);\n        var value = 0;\n        for (var c = lookup[hash]; c !== undefined; c = c.next) {\n            var dx = dx0 + c.dx;\n            var dy = dy0 + c.dy;\n            var dz = dz0 + c.dz;\n            var dw = dw0 + c.dw;\n            var attn = 2 - dx * dx - dy * dy - dz * dz - dw * dw;\n            if (attn > 0) {\n                var px = xsb + c.xsb;\n                var py = ysb + c.ysb;\n                var pz = zsb + c.zsb;\n                var pw = wsb + c.wsb;\n                var indexPartA = perm[px & 0xff];\n                var indexPartB = perm[(indexPartA + py) & 0xff];\n                var indexPartC = perm[(indexPartB + pz) & 0xff];\n                var index = perm4D[(indexPartC + pw) & 0xff];\n                var valuePart = gradients4D[index] * dx +\n                    gradients4D[index + 1] * dy +\n                    gradients4D[index + 2] * dz +\n                    gradients4D[index + 3] * dw;\n                value += attn * attn * attn * attn * valuePart;\n            }\n        }\n        return value * NORM_4D;\n    };\n}\nexports.makeNoise4D = makeNoise4D;\nvar base4D = [\n    [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1],\n    [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1],\n    [\n        1,\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        1,\n        0,\n        0,\n        1,\n        0,\n        0,\n        1,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1,\n        2,\n        1,\n        1,\n        0,\n        0,\n        2,\n        1,\n        0,\n        1,\n        0,\n        2,\n        1,\n        0,\n        0,\n        1,\n        2,\n        0,\n        1,\n        1,\n        0,\n        2,\n        0,\n        1,\n        0,\n        1,\n        2,\n        0,\n        0,\n        1,\n        1,\n    ],\n    [\n        3,\n        1,\n        1,\n        1,\n        0,\n        3,\n        1,\n        1,\n        0,\n        1,\n        3,\n        1,\n        0,\n        1,\n        1,\n        3,\n        0,\n        1,\n        1,\n        1,\n        2,\n        1,\n        1,\n        0,\n        0,\n        2,\n        1,\n        0,\n        1,\n        0,\n        2,\n        1,\n        0,\n        0,\n        1,\n        2,\n        0,\n        1,\n        1,\n        0,\n        2,\n        0,\n        1,\n        0,\n        1,\n        2,\n        0,\n        0,\n        1,\n        1,\n    ],\n];\nvar gradients4D = [\n    3,\n    1,\n    1,\n    1,\n    1,\n    3,\n    1,\n    1,\n    1,\n    1,\n    3,\n    1,\n    1,\n    1,\n    1,\n    3,\n    -3,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    3,\n    -1,\n    1,\n    1,\n    1,\n    -3,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    -3,\n    -1,\n    1,\n    1,\n    -1,\n    -3,\n    1,\n    1,\n    -1,\n    -1,\n    3,\n    1,\n    -1,\n    -1,\n    1,\n    3,\n    3,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    -1,\n    1,\n    1,\n    1,\n    -3,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    -3,\n    1,\n    -1,\n    1,\n    -1,\n    3,\n    -1,\n    1,\n    -1,\n    1,\n    -3,\n    1,\n    -1,\n    1,\n    -1,\n    3,\n    3,\n    -1,\n    -1,\n    1,\n    1,\n    -3,\n    -1,\n    1,\n    1,\n    -1,\n    -3,\n    1,\n    1,\n    -1,\n    -1,\n    3,\n    -3,\n    -1,\n    -1,\n    1,\n    -1,\n    -3,\n    -1,\n    1,\n    -1,\n    -1,\n    -3,\n    1,\n    -1,\n    -1,\n    -1,\n    3,\n    3,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    -1,\n    1,\n    1,\n    1,\n    -3,\n    -3,\n    1,\n    1,\n    -1,\n    -1,\n    3,\n    1,\n    -1,\n    -1,\n    1,\n    3,\n    -1,\n    -1,\n    1,\n    1,\n    -3,\n    3,\n    -1,\n    1,\n    -1,\n    1,\n    -3,\n    1,\n    -1,\n    1,\n    -1,\n    3,\n    -1,\n    1,\n    -1,\n    1,\n    -3,\n    -3,\n    -1,\n    1,\n    -1,\n    -1,\n    -3,\n    1,\n    -1,\n    -1,\n    -1,\n    3,\n    -1,\n    -1,\n    -1,\n    1,\n    -3,\n    3,\n    1,\n    -1,\n    -1,\n    1,\n    3,\n    -1,\n    -1,\n    1,\n    1,\n    -3,\n    -1,\n    1,\n    1,\n    -1,\n    -3,\n    -3,\n    1,\n    -1,\n    -1,\n    -1,\n    3,\n    -1,\n    -1,\n    -1,\n    1,\n    -3,\n    -1,\n    -1,\n    1,\n    -1,\n    -3,\n    3,\n    -1,\n    -1,\n    -1,\n    1,\n    -3,\n    -1,\n    -1,\n    1,\n    -1,\n    -3,\n    -1,\n    1,\n    -1,\n    -1,\n    -3,\n    -3,\n    -1,\n    -1,\n    -1,\n    -1,\n    -3,\n    -1,\n    -1,\n    -1,\n    -1,\n    -3,\n    -1,\n    -1,\n    -1,\n    -1,\n    -3,\n];\nvar lookupPairs4D = [\n    0,\n    3,\n    1,\n    2,\n    2,\n    3,\n    5,\n    2,\n    6,\n    1,\n    7,\n    1,\n    8,\n    3,\n    9,\n    2,\n    10,\n    3,\n    13,\n    2,\n    16,\n    3,\n    18,\n    3,\n    22,\n    1,\n    23,\n    1,\n    24,\n    3,\n    26,\n    3,\n    33,\n    2,\n    37,\n    2,\n    38,\n    1,\n    39,\n    1,\n    41,\n    2,\n    45,\n    2,\n    54,\n    1,\n    55,\n    1,\n    56,\n    0,\n    57,\n    0,\n    58,\n    0,\n    59,\n    0,\n    60,\n    0,\n    61,\n    0,\n    62,\n    0,\n    63,\n    0,\n    256,\n    3,\n    258,\n    3,\n    264,\n    3,\n    266,\n    3,\n    272,\n    3,\n    274,\n    3,\n    280,\n    3,\n    282,\n    3,\n    2049,\n    2,\n    2053,\n    2,\n    2057,\n    2,\n    2061,\n    2,\n    2081,\n    2,\n    2085,\n    2,\n    2089,\n    2,\n    2093,\n    2,\n    2304,\n    9,\n    2305,\n    9,\n    2312,\n    9,\n    2313,\n    9,\n    16390,\n    1,\n    16391,\n    1,\n    16406,\n    1,\n    16407,\n    1,\n    16422,\n    1,\n    16423,\n    1,\n    16438,\n    1,\n    16439,\n    1,\n    16642,\n    8,\n    16646,\n    8,\n    16658,\n    8,\n    16662,\n    8,\n    18437,\n    6,\n    18439,\n    6,\n    18469,\n    6,\n    18471,\n    6,\n    18688,\n    9,\n    18689,\n    9,\n    18690,\n    8,\n    18693,\n    6,\n    18694,\n    8,\n    18695,\n    6,\n    18696,\n    9,\n    18697,\n    9,\n    18706,\n    8,\n    18710,\n    8,\n    18725,\n    6,\n    18727,\n    6,\n    131128,\n    0,\n    131129,\n    0,\n    131130,\n    0,\n    131131,\n    0,\n    131132,\n    0,\n    131133,\n    0,\n    131134,\n    0,\n    131135,\n    0,\n    131352,\n    7,\n    131354,\n    7,\n    131384,\n    7,\n    131386,\n    7,\n    133161,\n    5,\n    133165,\n    5,\n    133177,\n    5,\n    133181,\n    5,\n    133376,\n    9,\n    133377,\n    9,\n    133384,\n    9,\n    133385,\n    9,\n    133400,\n    7,\n    133402,\n    7,\n    133417,\n    5,\n    133421,\n    5,\n    133432,\n    7,\n    133433,\n    5,\n    133434,\n    7,\n    133437,\n    5,\n    147510,\n    4,\n    147511,\n    4,\n    147518,\n    4,\n    147519,\n    4,\n    147714,\n    8,\n    147718,\n    8,\n    147730,\n    8,\n    147734,\n    8,\n    147736,\n    7,\n    147738,\n    7,\n    147766,\n    4,\n    147767,\n    4,\n    147768,\n    7,\n    147770,\n    7,\n    147774,\n    4,\n    147775,\n    4,\n    149509,\n    6,\n    149511,\n    6,\n    149541,\n    6,\n    149543,\n    6,\n    149545,\n    5,\n    149549,\n    5,\n    149558,\n    4,\n    149559,\n    4,\n    149561,\n    5,\n    149565,\n    5,\n    149566,\n    4,\n    149567,\n    4,\n    149760,\n    9,\n    149761,\n    9,\n    149762,\n    8,\n    149765,\n    6,\n    149766,\n    8,\n    149767,\n    6,\n    149768,\n    9,\n    149769,\n    9,\n    149778,\n    8,\n    149782,\n    8,\n    149784,\n    7,\n    149786,\n    7,\n    149797,\n    6,\n    149799,\n    6,\n    149801,\n    5,\n    149805,\n    5,\n    149814,\n    4,\n    149815,\n    4,\n    149816,\n    7,\n    149817,\n    5,\n    149818,\n    7,\n    149821,\n    5,\n    149822,\n    4,\n    149823,\n    4,\n    149824,\n    37,\n    149825,\n    37,\n    149826,\n    36,\n    149829,\n    34,\n    149830,\n    36,\n    149831,\n    34,\n    149832,\n    37,\n    149833,\n    37,\n    149842,\n    36,\n    149846,\n    36,\n    149848,\n    35,\n    149850,\n    35,\n    149861,\n    34,\n    149863,\n    34,\n    149865,\n    33,\n    149869,\n    33,\n    149878,\n    32,\n    149879,\n    32,\n    149880,\n    35,\n    149881,\n    33,\n    149882,\n    35,\n    149885,\n    33,\n    149886,\n    32,\n    149887,\n    32,\n    150080,\n    49,\n    150082,\n    48,\n    150088,\n    49,\n    150098,\n    48,\n    150104,\n    47,\n    150106,\n    47,\n    151873,\n    46,\n    151877,\n    45,\n    151881,\n    46,\n    151909,\n    45,\n    151913,\n    44,\n    151917,\n    44,\n    152128,\n    49,\n    152129,\n    46,\n    152136,\n    49,\n    152137,\n    46,\n    166214,\n    43,\n    166215,\n    42,\n    166230,\n    43,\n    166247,\n    42,\n    166262,\n    41,\n    166263,\n    41,\n    166466,\n    48,\n    166470,\n    43,\n    166482,\n    48,\n    166486,\n    43,\n    168261,\n    45,\n    168263,\n    42,\n    168293,\n    45,\n    168295,\n    42,\n    168512,\n    31,\n    168513,\n    28,\n    168514,\n    31,\n    168517,\n    28,\n    168518,\n    25,\n    168519,\n    25,\n    280952,\n    40,\n    280953,\n    39,\n    280954,\n    40,\n    280957,\n    39,\n    280958,\n    38,\n    280959,\n    38,\n    281176,\n    47,\n    281178,\n    47,\n    281208,\n    40,\n    281210,\n    40,\n    282985,\n    44,\n    282989,\n    44,\n    283001,\n    39,\n    283005,\n    39,\n    283208,\n    30,\n    283209,\n    27,\n    283224,\n    30,\n    283241,\n    27,\n    283256,\n    22,\n    283257,\n    22,\n    297334,\n    41,\n    297335,\n    41,\n    297342,\n    38,\n    297343,\n    38,\n    297554,\n    29,\n    297558,\n    24,\n    297562,\n    29,\n    297590,\n    24,\n    297594,\n    21,\n    297598,\n    21,\n    299365,\n    26,\n    299367,\n    23,\n    299373,\n    26,\n    299383,\n    23,\n    299389,\n    20,\n    299391,\n    20,\n    299584,\n    31,\n    299585,\n    28,\n    299586,\n    31,\n    299589,\n    28,\n    299590,\n    25,\n    299591,\n    25,\n    299592,\n    30,\n    299593,\n    27,\n    299602,\n    29,\n    299606,\n    24,\n    299608,\n    30,\n    299610,\n    29,\n    299621,\n    26,\n    299623,\n    23,\n    299625,\n    27,\n    299629,\n    26,\n    299638,\n    24,\n    299639,\n    23,\n    299640,\n    22,\n    299641,\n    22,\n    299642,\n    21,\n    299645,\n    20,\n    299646,\n    21,\n    299647,\n    20,\n    299648,\n    61,\n    299649,\n    60,\n    299650,\n    61,\n    299653,\n    60,\n    299654,\n    59,\n    299655,\n    59,\n    299656,\n    58,\n    299657,\n    57,\n    299666,\n    55,\n    299670,\n    54,\n    299672,\n    58,\n    299674,\n    55,\n    299685,\n    52,\n    299687,\n    51,\n    299689,\n    57,\n    299693,\n    52,\n    299702,\n    54,\n    299703,\n    51,\n    299704,\n    56,\n    299705,\n    56,\n    299706,\n    53,\n    299709,\n    50,\n    299710,\n    53,\n    299711,\n    50,\n    299904,\n    61,\n    299906,\n    61,\n    299912,\n    58,\n    299922,\n    55,\n    299928,\n    58,\n    299930,\n    55,\n    301697,\n    60,\n    301701,\n    60,\n    301705,\n    57,\n    301733,\n    52,\n    301737,\n    57,\n    301741,\n    52,\n    301952,\n    79,\n    301953,\n    79,\n    301960,\n    76,\n    301961,\n    76,\n    316038,\n    59,\n    316039,\n    59,\n    316054,\n    54,\n    316071,\n    51,\n    316086,\n    54,\n    316087,\n    51,\n    316290,\n    78,\n    316294,\n    78,\n    316306,\n    73,\n    316310,\n    73,\n    318085,\n    77,\n    318087,\n    77,\n    318117,\n    70,\n    318119,\n    70,\n    318336,\n    79,\n    318337,\n    79,\n    318338,\n    78,\n    318341,\n    77,\n    318342,\n    78,\n    318343,\n    77,\n    430776,\n    56,\n    430777,\n    56,\n    430778,\n    53,\n    430781,\n    50,\n    430782,\n    53,\n    430783,\n    50,\n    431000,\n    75,\n    431002,\n    72,\n    431032,\n    75,\n    431034,\n    72,\n    432809,\n    74,\n    432813,\n    69,\n    432825,\n    74,\n    432829,\n    69,\n    433032,\n    76,\n    433033,\n    76,\n    433048,\n    75,\n    433065,\n    74,\n    433080,\n    75,\n    433081,\n    74,\n    447158,\n    71,\n    447159,\n    68,\n    447166,\n    71,\n    447167,\n    68,\n    447378,\n    73,\n    447382,\n    73,\n    447386,\n    72,\n    447414,\n    71,\n    447418,\n    72,\n    447422,\n    71,\n    449189,\n    70,\n    449191,\n    70,\n    449197,\n    69,\n    449207,\n    68,\n    449213,\n    69,\n    449215,\n    68,\n    449408,\n    67,\n    449409,\n    67,\n    449410,\n    66,\n    449413,\n    64,\n    449414,\n    66,\n    449415,\n    64,\n    449416,\n    67,\n    449417,\n    67,\n    449426,\n    66,\n    449430,\n    66,\n    449432,\n    65,\n    449434,\n    65,\n    449445,\n    64,\n    449447,\n    64,\n    449449,\n    63,\n    449453,\n    63,\n    449462,\n    62,\n    449463,\n    62,\n    449464,\n    65,\n    449465,\n    63,\n    449466,\n    65,\n    449469,\n    63,\n    449470,\n    62,\n    449471,\n    62,\n    449472,\n    19,\n    449473,\n    19,\n    449474,\n    18,\n    449477,\n    16,\n    449478,\n    18,\n    449479,\n    16,\n    449480,\n    19,\n    449481,\n    19,\n    449490,\n    18,\n    449494,\n    18,\n    449496,\n    17,\n    449498,\n    17,\n    449509,\n    16,\n    449511,\n    16,\n    449513,\n    15,\n    449517,\n    15,\n    449526,\n    14,\n    449527,\n    14,\n    449528,\n    17,\n    449529,\n    15,\n    449530,\n    17,\n    449533,\n    15,\n    449534,\n    14,\n    449535,\n    14,\n    449728,\n    19,\n    449729,\n    19,\n    449730,\n    18,\n    449734,\n    18,\n    449736,\n    19,\n    449737,\n    19,\n    449746,\n    18,\n    449750,\n    18,\n    449752,\n    17,\n    449754,\n    17,\n    449784,\n    17,\n    449786,\n    17,\n    451520,\n    19,\n    451521,\n    19,\n    451525,\n    16,\n    451527,\n    16,\n    451528,\n    19,\n    451529,\n    19,\n    451557,\n    16,\n    451559,\n    16,\n    451561,\n    15,\n    451565,\n    15,\n    451577,\n    15,\n    451581,\n    15,\n    451776,\n    19,\n    451777,\n    19,\n    451784,\n    19,\n    451785,\n    19,\n    465858,\n    18,\n    465861,\n    16,\n    465862,\n    18,\n    465863,\n    16,\n    465874,\n    18,\n    465878,\n    18,\n    465893,\n    16,\n    465895,\n    16,\n    465910,\n    14,\n    465911,\n    14,\n    465918,\n    14,\n    465919,\n    14,\n    466114,\n    18,\n    466118,\n    18,\n    466130,\n    18,\n    466134,\n    18,\n    467909,\n    16,\n    467911,\n    16,\n    467941,\n    16,\n    467943,\n    16,\n    468160,\n    13,\n    468161,\n    13,\n    468162,\n    13,\n    468163,\n    13,\n    468164,\n    13,\n    468165,\n    13,\n    468166,\n    13,\n    468167,\n    13,\n    580568,\n    17,\n    580570,\n    17,\n    580585,\n    15,\n    580589,\n    15,\n    580598,\n    14,\n    580599,\n    14,\n    580600,\n    17,\n    580601,\n    15,\n    580602,\n    17,\n    580605,\n    15,\n    580606,\n    14,\n    580607,\n    14,\n    580824,\n    17,\n    580826,\n    17,\n    580856,\n    17,\n    580858,\n    17,\n    582633,\n    15,\n    582637,\n    15,\n    582649,\n    15,\n    582653,\n    15,\n    582856,\n    12,\n    582857,\n    12,\n    582872,\n    12,\n    582873,\n    12,\n    582888,\n    12,\n    582889,\n    12,\n    582904,\n    12,\n    582905,\n    12,\n    596982,\n    14,\n    596983,\n    14,\n    596990,\n    14,\n    596991,\n    14,\n    597202,\n    11,\n    597206,\n    11,\n    597210,\n    11,\n    597214,\n    11,\n    597234,\n    11,\n    597238,\n    11,\n    597242,\n    11,\n    597246,\n    11,\n    599013,\n    10,\n    599015,\n    10,\n    599021,\n    10,\n    599023,\n    10,\n    599029,\n    10,\n    599031,\n    10,\n    599037,\n    10,\n    599039,\n    10,\n    599232,\n    13,\n    599233,\n    13,\n    599234,\n    13,\n    599235,\n    13,\n    599236,\n    13,\n    599237,\n    13,\n    599238,\n    13,\n    599239,\n    13,\n    599240,\n    12,\n    599241,\n    12,\n    599250,\n    11,\n    599254,\n    11,\n    599256,\n    12,\n    599257,\n    12,\n    599258,\n    11,\n    599262,\n    11,\n    599269,\n    10,\n    599271,\n    10,\n    599272,\n    12,\n    599273,\n    12,\n    599277,\n    10,\n    599279,\n    10,\n    599282,\n    11,\n    599285,\n    10,\n    599286,\n    11,\n    599287,\n    10,\n    599288,\n    12,\n    599289,\n    12,\n    599290,\n    11,\n    599293,\n    10,\n    599294,\n    11,\n    599295,\n    10,\n];\nvar p4D = [\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    0,\n    1,\n    0,\n    -1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    -1,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    0,\n    1,\n    0,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    1,\n    0,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    -1,\n    0,\n    1,\n    0,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    0,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    0,\n    2,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    0,\n    2,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    0,\n    2,\n    1,\n    0,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    0,\n    2,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    0,\n    2,\n    0,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    1,\n    1,\n    4,\n    2,\n    1,\n    1,\n    0,\n    4,\n    1,\n    2,\n    1,\n    0,\n    4,\n    1,\n    1,\n    2,\n    0,\n    1,\n    4,\n    2,\n    1,\n    0,\n    1,\n    4,\n    1,\n    2,\n    0,\n    1,\n    4,\n    1,\n    1,\n    0,\n    2,\n    1,\n    4,\n    2,\n    0,\n    1,\n    1,\n    4,\n    1,\n    0,\n    2,\n    1,\n    4,\n    1,\n    0,\n    1,\n    2,\n    1,\n    4,\n    0,\n    2,\n    1,\n    1,\n    4,\n    0,\n    1,\n    2,\n    1,\n    4,\n    0,\n    1,\n    1,\n    2,\n    1,\n    2,\n    1,\n    1,\n    0,\n    0,\n    3,\n    2,\n    1,\n    0,\n    0,\n    3,\n    1,\n    2,\n    0,\n    0,\n    1,\n    2,\n    1,\n    0,\n    1,\n    0,\n    3,\n    2,\n    0,\n    1,\n    0,\n    3,\n    1,\n    0,\n    2,\n    0,\n    1,\n    2,\n    0,\n    1,\n    1,\n    0,\n    3,\n    0,\n    2,\n    1,\n    0,\n    3,\n    0,\n    1,\n    2,\n    0,\n    1,\n    2,\n    1,\n    0,\n    0,\n    1,\n    3,\n    2,\n    0,\n    0,\n    1,\n    3,\n    1,\n    0,\n    0,\n    2,\n    1,\n    2,\n    0,\n    1,\n    0,\n    1,\n    3,\n    0,\n    2,\n    0,\n    1,\n    3,\n    0,\n    1,\n    0,\n    2,\n    1,\n    2,\n    0,\n    0,\n    1,\n    1,\n    3,\n    0,\n    0,\n    2,\n    1,\n    3,\n    0,\n    0,\n    1,\n    2,\n    2,\n    3,\n    1,\n    1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    0,\n    1,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    3,\n    1,\n    0,\n    1,\n    1,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    0,\n    1,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    3,\n    0,\n    1,\n    1,\n    1,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    3,\n    1,\n    0,\n    1,\n    1,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    3,\n    0,\n    1,\n    1,\n    1,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    3,\n    1,\n    1,\n    0,\n    1,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    3,\n    1,\n    0,\n    1,\n    1,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    3,\n    0,\n    1,\n    1,\n    1,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    0,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    0,\n    1,\n    0,\n    0,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    0,\n    0,\n    1,\n    0,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    1,\n    0,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    0,\n    1,\n    0,\n    0,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    0,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    1,\n    0,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    1,\n    0,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    0,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    1,\n    0,\n    0,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    1,\n    0,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    0,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    1,\n    0,\n    0,\n    3,\n    1,\n    2,\n    0,\n    0,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    1,\n    0,\n    3,\n    1,\n    0,\n    2,\n    0,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    1,\n    0,\n    3,\n    0,\n    1,\n    2,\n    0,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    0,\n    1,\n    3,\n    1,\n    0,\n    0,\n    2,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    0,\n    1,\n    3,\n    0,\n    1,\n    0,\n    2,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    0,\n    2,\n    1,\n    3,\n    0,\n    0,\n    1,\n    2,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    1,\n    0,\n    0,\n    3,\n    1,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    3,\n    2,\n    0,\n    1,\n    0,\n    3,\n    1,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    3,\n    0,\n    2,\n    1,\n    0,\n    3,\n    0,\n    1,\n    2,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    3,\n    2,\n    1,\n    0,\n    0,\n    3,\n    1,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    0,\n    1,\n    3,\n    1,\n    0,\n    0,\n    2,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    0,\n    1,\n    3,\n    0,\n    1,\n    0,\n    2,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    1,\n    0,\n    3,\n    1,\n    0,\n    2,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    0,\n    1,\n    3,\n    1,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    0,\n    2,\n    1,\n    3,\n    0,\n    0,\n    1,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    1,\n    0,\n    3,\n    0,\n    1,\n    2,\n    0,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    0,\n    1,\n    3,\n    0,\n    1,\n    0,\n    2,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    0,\n    2,\n    1,\n    3,\n    0,\n    0,\n    1,\n    2,\n    2,\n    -1,\n    1,\n    1,\n    1,\n];\n\n\n//# sourceURL=webpack://islands/./node_modules/open-simplex-noise/lib/4d.js?");

/***/ }),

/***/ "./node_modules/open-simplex-noise/lib/mod.js":
/*!****************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/mod.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This is free and unencumbered software released into the public domain\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeNoise4D = exports.makeNoise3D = exports.makeNoise2D = void 0;\nvar _2d_1 = __webpack_require__(/*! ./2d */ \"./node_modules/open-simplex-noise/lib/2d.js\");\nObject.defineProperty(exports, \"makeNoise2D\", ({ enumerable: true, get: function () { return _2d_1.makeNoise2D; } }));\nvar _3d_1 = __webpack_require__(/*! ./3d */ \"./node_modules/open-simplex-noise/lib/3d.js\");\nObject.defineProperty(exports, \"makeNoise3D\", ({ enumerable: true, get: function () { return _3d_1.makeNoise3D; } }));\nvar _4d_1 = __webpack_require__(/*! ./4d */ \"./node_modules/open-simplex-noise/lib/4d.js\");\nObject.defineProperty(exports, \"makeNoise4D\", ({ enumerable: true, get: function () { return _4d_1.makeNoise4D; } }));\n\n\n//# sourceURL=webpack://islands/./node_modules/open-simplex-noise/lib/mod.js?");

/***/ }),

/***/ "./node_modules/open-simplex-noise/lib/shuffle_seed.js":
/*!*************************************************************!*\
  !*** ./node_modules/open-simplex-noise/lib/shuffle_seed.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This is free and unencumbered software released into the public domain\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction shuffleSeed(seed) {\n    var newSeed = new Uint32Array(1);\n    newSeed[0] = seed[0] * 1664525 + 1013904223;\n    return newSeed;\n}\nexports[\"default\"] = shuffleSeed;\n\n\n//# sourceURL=webpack://islands/./node_modules/open-simplex-noise/lib/shuffle_seed.js?");

/***/ }),

/***/ "./node_modules/@kninnug/constrainautor/lib/Constrainautor.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@kninnug/constrainautor/lib/Constrainautor.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Constrainautor)\n/* harmony export */ });\n/* harmony import */ var robust_predicates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! robust-predicates */ \"./node_modules/robust-predicates/index.js\");\n\n\n/**\r\n * A set of numbers, stored as bits in a typed array. The amount of numbers /\r\n * the maximum number that can be stored is limited by the length, which is\r\n * fixed at construction time.\r\n */\r\nclass BitSet {\r\n    constructor(W, bs) {\r\n        this.W = W;\r\n        this.bs = bs;\r\n    }\r\n    /**\r\n     * Add a number to the set.\r\n     *\r\n     * @param idx The number to add. Must be 0 <= idx < len.\r\n     * @return this.\r\n     */\r\n    add(idx) {\r\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W;\r\n        this.bs[byte] |= 1 << bit;\r\n        return this;\r\n    }\r\n    /**\r\n     * Delete a number from the set.\r\n     *\r\n     * @param idx The number to delete. Must be 0 <= idx < len.\r\n     * @return this.\r\n     */\r\n    delete(idx) {\r\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W;\r\n        this.bs[byte] &= ~(1 << bit);\r\n        return this;\r\n    }\r\n    /**\r\n     * Add or delete a number in the set, depending on the second argument.\r\n     *\r\n     * @param idx The number to add or delete. Must be 0 <= idx < len.\r\n     * @param val If true, add the number, otherwise delete.\r\n     * @return val.\r\n     */\r\n    set(idx, val) {\r\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W, m = 1 << bit;\r\n        //this.bs[byte] = set ? this.bs[byte] | m : this.bs[byte] & ~m;\r\n        this.bs[byte] ^= (-val ^ this.bs[byte]) & m; // -set == set * 255\r\n        return val;\r\n    }\r\n    /**\r\n     * Whether the number is in the set.\r\n     *\r\n     * @param idx The number to test. Must be 0 <= idx < len.\r\n     * @return True if the number is in the set.\r\n     */\r\n    has(idx) {\r\n        const W = this.W, byte = (idx / W) | 0, bit = idx % W;\r\n        return !!(this.bs[byte] & (1 << bit));\r\n    }\r\n    /**\r\n     * Iterate over the numbers that are in the set. The callback is invoked\r\n     * with each number that is set. It is allowed to change the BitSet during\r\n     * iteration. If it deletes a number that has not been iterated over, that\r\n     * number will not show up in a later call. If it adds a number during\r\n     * iteration, that number may or may not show up in a later call.\r\n     *\r\n     * @param fn The function to call for each number.\r\n     * @return this.\r\n     */\r\n    forEach(fn) {\r\n        const W = this.W, bs = this.bs, len = bs.length;\r\n        for (let byte = 0; byte < len; byte++) {\r\n            let bit = 0;\r\n            // bs[byte] may change during iteration\r\n            while (bs[byte] && bit < W) {\r\n                if (bs[byte] & (1 << bit)) {\r\n                    fn(byte * W + bit);\r\n                }\r\n                bit++;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * A bit set using 8 bits per cell.\r\n */\r\nclass BitSet8 extends BitSet {\r\n    /**\r\n     * Create a bit set.\r\n     *\r\n     * @param len The length of the bit set, limiting the maximum value that\r\n     *        can be stored in it to len - 1.\r\n     */\r\n    constructor(len) {\r\n        const W = 8, bs = new Uint8Array(Math.ceil(len / W)).fill(0);\r\n        super(W, bs);\r\n    }\r\n}\n\nfunction nextEdge(e) { return (e % 3 === 2) ? e - 2 : e + 1; }\r\nfunction prevEdge(e) { return (e % 3 === 0) ? e + 2 : e - 1; }\r\n/**\r\n * Constrain a triangulation from Delaunator, using (parts of) the algorithm\r\n * in \"A fast algorithm for generating constrained Delaunay triangulations\" by\r\n * S. W. Sloan.\r\n */\r\nclass Constrainautor {\r\n    /**\r\n     * Make a Constrainautor.\r\n     *\r\n     * @param del The triangulation output from Delaunator.\r\n     * @param edges If provided, constrain these edges as by constrainAll.\r\n     */\r\n    constructor(del, edges) {\r\n        if (!del || typeof del !== 'object' || !del.triangles || !del.halfedges || !del.coords) {\r\n            throw new Error(\"Expected an object with Delaunator output\");\r\n        }\r\n        if (del.triangles.length % 3 || del.halfedges.length !== del.triangles.length || del.coords.length % 2) {\r\n            throw new Error(\"Delaunator output appears inconsistent\");\r\n        }\r\n        if (del.triangles.length < 3) {\r\n            throw new Error(\"No edges in triangulation\");\r\n        }\r\n        this.del = del;\r\n        const U32NIL = 2 ** 32 - 1, // Max value of a Uint32Array: use as a sentinel for not yet defined \r\n        numPoints = del.coords.length >> 1, numEdges = del.triangles.length;\r\n        // Map every vertex id to the right-most edge that points to that vertex.\r\n        this.vertMap = new Uint32Array(numPoints).fill(U32NIL);\r\n        // Keep track of edges flipped while constraining\r\n        this.flips = new BitSet8(numEdges);\r\n        // Keep track of constrained edges\r\n        this.consd = new BitSet8(numEdges);\r\n        for (let e = 0; e < numEdges; e++) {\r\n            const v = del.triangles[e];\r\n            if (this.vertMap[v] === U32NIL) {\r\n                this.updateVert(e);\r\n            }\r\n        }\r\n        if (edges) {\r\n            this.constrainAll(edges);\r\n        }\r\n    }\r\n    /**\r\n     * Constrain the triangulation such that there is an edge between p1 and p2.\r\n     *\r\n     * @param segP1 The index of one segment end-point in the coords array.\r\n     * @param segP2 The index of the other segment end-point in the coords array.\r\n     * @return The id of the edge that points from p1 to p2. If the\r\n     *         constrained edge lies on the hull and points in the opposite\r\n     *         direction (p2 to p1), the negative of its id is returned.\r\n     */\r\n    constrainOne(segP1, segP2) {\r\n        const { triangles, halfedges } = this.del, vm = this.vertMap, consd = this.consd, start = vm[segP1];\r\n        // Loop over the edges touching segP1\r\n        let edg = start;\r\n        do {\r\n            // edg points toward segP1, so its start-point is opposite it\r\n            const p4 = triangles[edg], nxt = nextEdge(edg);\r\n            // already constrained, but in reverse order\r\n            if (p4 === segP2) {\r\n                return this.protect(edg);\r\n            }\r\n            // The edge opposite segP1\r\n            const opp = prevEdge(edg), p3 = triangles[opp];\r\n            // already constrained\r\n            if (p3 === segP2) {\r\n                this.protect(nxt);\r\n                return nxt;\r\n            }\r\n            // edge opposite segP1 intersects constraint\r\n            if (this.intersectSegments(segP1, segP2, p3, p4)) {\r\n                edg = opp;\r\n                break;\r\n            }\r\n            const adj = halfedges[nxt];\r\n            // The next edge pointing to segP1\r\n            edg = adj;\r\n        } while (edg !== -1 && edg !== start);\r\n        let conEdge = edg;\r\n        // Walk through the triangulation looking for further intersecting\r\n        // edges and flip them. If an intersecting edge cannot be flipped,\r\n        // assign its id to `rescan` and restart from there, until there are\r\n        // no more intersects.\r\n        let rescan = -1;\r\n        while (edg !== -1) {\r\n            // edg is the intersecting half-edge in the triangle we came from\r\n            // adj is now the opposite half-edge in the adjacent triangle, which\r\n            // is away from segP1.\r\n            const adj = halfedges[edg], \r\n            // cross diagonal\r\n            bot = prevEdge(edg), top = prevEdge(adj), rgt = nextEdge(adj);\r\n            if (adj === -1) {\r\n                throw new Error(\"Constraining edge exited the hull\");\r\n            }\r\n            if (consd.has(edg)) { // || consd.has(adj) // assume consd is consistent\r\n                throw new Error(\"Edge intersects already constrained edge\");\r\n            }\r\n            if (this.isCollinear(segP1, segP2, triangles[edg]) ||\r\n                this.isCollinear(segP1, segP2, triangles[adj])) {\r\n                throw new Error(\"Constraining edge intersects point\");\r\n            }\r\n            const convex = this.intersectSegments(triangles[edg], triangles[adj], triangles[bot], triangles[top]);\r\n            // The quadrilateral formed by the two triangles adjoing edg is not\r\n            // convex, so the edge can't be flipped. Continue looking for the\r\n            // next intersecting edge and restart at this one later.\r\n            if (!convex) {\r\n                if (rescan === -1) {\r\n                    rescan = edg;\r\n                }\r\n                if (triangles[top] === segP2) {\r\n                    if (edg === rescan) {\r\n                        throw new Error(\"Infinite loop: non-convex quadrilateral\");\r\n                    }\r\n                    edg = rescan;\r\n                    rescan = -1;\r\n                    continue;\r\n                }\r\n                // Look for the next intersect\r\n                if (this.intersectSegments(segP1, segP2, triangles[top], triangles[adj])) {\r\n                    edg = top;\r\n                }\r\n                else if (this.intersectSegments(segP1, segP2, triangles[rgt], triangles[top])) {\r\n                    edg = rgt;\r\n                }\r\n                else if (rescan === edg) {\r\n                    throw new Error(\"Infinite loop: no further intersect after non-convex\");\r\n                }\r\n                continue;\r\n            }\r\n            this.flipDiagonal(edg);\r\n            // The new edge might still intersect, which will be fixed in the\r\n            // next rescan.\r\n            if (this.intersectSegments(segP1, segP2, triangles[bot], triangles[top])) {\r\n                if (rescan === -1) {\r\n                    rescan = bot;\r\n                }\r\n                if (rescan === bot) {\r\n                    throw new Error(\"Infinite loop: flipped diagonal still intersects\");\r\n                }\r\n            }\r\n            // Reached the other segment end-point? Start the rescan.\r\n            if (triangles[top] === segP2) {\r\n                conEdge = top;\r\n                edg = rescan;\r\n                rescan = -1;\r\n                // Otherwise, for the next edge that intersects. Because we just\r\n                // flipped, it's either edg again, or rgt.\r\n            }\r\n            else if (this.intersectSegments(segP1, segP2, triangles[rgt], triangles[top])) {\r\n                edg = rgt;\r\n            }\r\n        }\r\n        const flips = this.flips;\r\n        this.protect(conEdge);\r\n        do {\r\n            // need to use var to scope it outside the loop, but re-initialize\r\n            // to 0 each iteration\r\n            var flipped = 0;\r\n            flips.forEach(edg => {\r\n                flips.delete(edg);\r\n                const adj = halfedges[edg];\r\n                if (adj === -1) {\r\n                    return;\r\n                }\r\n                flips.delete(adj);\r\n                if (!this.isDelaunay(edg)) {\r\n                    this.flipDiagonal(edg);\r\n                    flipped++;\r\n                }\r\n            });\r\n        } while (flipped > 0);\r\n        return this.findEdge(segP1, segP2);\r\n    }\r\n    /**\r\n     * Fix the Delaunay condition. It is no longer necessary to call this\r\n     * method after constraining (many) edges, since constrainOne will do it\r\n     * after each.\r\n     *\r\n     * @param deep If true, keep checking & flipping edges until all\r\n     *        edges are Delaunay, otherwise only check the edges once.\r\n     * @return The triangulation object.\r\n     */\r\n    delaunify(deep = false) {\r\n        const halfedges = this.del.halfedges, flips = this.flips, consd = this.consd, len = halfedges.length;\r\n        do {\r\n            var flipped = 0;\r\n            for (let edg = 0; edg < len; edg++) {\r\n                if (consd.has(edg)) {\r\n                    continue;\r\n                }\r\n                flips.delete(edg);\r\n                const adj = halfedges[edg];\r\n                if (adj === -1) {\r\n                    continue;\r\n                }\r\n                flips.delete(adj);\r\n                if (!this.isDelaunay(edg)) {\r\n                    this.flipDiagonal(edg);\r\n                    flipped++;\r\n                }\r\n            }\r\n        } while (deep && flipped > 0);\r\n        return this;\r\n    }\r\n    /**\r\n     * Call constrainOne on each edge, and delaunify afterwards.\r\n     *\r\n     * @param edges The edges to constrain: each element is an array with\r\n     *        [p1, p2] which are indices into the points array originally\r\n     *        supplied to Delaunator.\r\n     * @return The triangulation object.\r\n     */\r\n    constrainAll(edges) {\r\n        const len = edges.length;\r\n        for (let i = 0; i < len; i++) {\r\n            const e = edges[i];\r\n            this.constrainOne(e[0], e[1]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Whether an edge is a constrained edge.\r\n     *\r\n     * @param edg The edge id.\r\n     * @return True if the edge is constrained.\r\n     */\r\n    isConstrained(edg) {\r\n        return this.consd.has(edg);\r\n    }\r\n    /**\r\n     * Find the edge that points from p1 -> p2. If there is only an edge from\r\n     * p2 -> p1 (i.e. it is on the hull), returns the negative id of it.\r\n     *\r\n     * @param p1 The index of the first point into the points array.\r\n     * @param p2 The index of the second point into the points array.\r\n     * @return The id of the edge that points from p1 -> p2, or the negative\r\n     *         id of the edge that goes from p2 -> p1, or Infinity if there is\r\n     *         no edge between p1 and p2.\r\n     */\r\n    findEdge(p1, p2) {\r\n        const start1 = this.vertMap[p2], { triangles, halfedges } = this.del;\r\n        let edg = start1, prv = -1;\r\n        // Walk around p2, iterating over the edges pointing to it\r\n        do {\r\n            if (triangles[edg] === p1) {\r\n                return edg;\r\n            }\r\n            prv = nextEdge(edg);\r\n            edg = halfedges[prv];\r\n        } while (edg !== -1 && edg !== start1);\r\n        // Did not find p1 -> p2, the only option is that it is on the hull on\r\n        // the 'left-hand' side, pointing p2 -> p1 (or there is no edge)\r\n        if (triangles[nextEdge(prv)] === p1) {\r\n            return -prv;\r\n        }\r\n        return Infinity;\r\n    }\r\n    /**\r\n     * Mark an edge as constrained, i.e. should not be touched by `delaunify`.\r\n     *\r\n     * @private\r\n     * @param edg The edge id.\r\n     * @return If edg has an adjacent, returns that, otherwise -edg.\r\n     */\r\n    protect(edg) {\r\n        const adj = this.del.halfedges[edg], flips = this.flips, consd = this.consd;\r\n        flips.delete(edg);\r\n        consd.add(edg);\r\n        if (adj !== -1) {\r\n            flips.delete(adj);\r\n            consd.add(adj);\r\n            return adj;\r\n        }\r\n        return -edg;\r\n    }\r\n    /**\r\n     * Mark an edge as flipped, unless it is already marked as constrained.\r\n     *\r\n     * @private\r\n     * @param edg The edge id.\r\n     * @return True if edg was not constrained.\r\n     */\r\n    markFlip(edg) {\r\n        const halfedges = this.del.halfedges, flips = this.flips, consd = this.consd;\r\n        if (consd.has(edg)) {\r\n            return false;\r\n        }\r\n        const adj = halfedges[edg];\r\n        if (adj !== -1) {\r\n            flips.add(edg);\r\n            flips.add(adj);\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Flip the edge shared by two triangles.\r\n     *\r\n     * @private\r\n     * @param edg The edge shared by the two triangles, must have an\r\n     *        adjacent half-edge.\r\n     * @return The new diagonal.\r\n     */\r\n    flipDiagonal(edg) {\r\n        // Flip a diagonal\r\n        //                top                     edg\r\n        //          o  <----- o            o <------  o \r\n        //         | ^ \\      ^           |       ^ / ^\r\n        //      lft|  \\ \\     |        lft|      / /  |\r\n        //         |   \\ \\adj |           |  bot/ /   |\r\n        //         | edg\\ \\   |           |    / /top |\r\n        //         |     \\ \\  |rgt        |   / /     |rgt\r\n        //         v      \\ v |           v  / v      |\r\n        //         o ----->  o            o   ------> o \r\n        //           bot                     adj\r\n        const { triangles, halfedges } = this.del, flips = this.flips, consd = this.consd, adj = halfedges[edg], bot = prevEdge(edg), lft = nextEdge(edg), top = prevEdge(adj), rgt = nextEdge(adj), adjBot = halfedges[bot], adjTop = halfedges[top];\r\n        if (consd.has(edg)) { // || consd.has(adj) // assume consd is consistent\r\n            throw new Error(\"Trying to flip a constrained edge\");\r\n        }\r\n        // move *edg to *top\r\n        triangles[edg] = triangles[top];\r\n        halfedges[edg] = adjTop;\r\n        if (!flips.set(edg, flips.has(top))) {\r\n            consd.set(edg, consd.has(top));\r\n        }\r\n        if (adjTop !== -1) {\r\n            halfedges[adjTop] = edg;\r\n        }\r\n        halfedges[bot] = top;\r\n        // move *adj to *bot\r\n        triangles[adj] = triangles[bot];\r\n        halfedges[adj] = adjBot;\r\n        if (!flips.set(adj, flips.has(bot))) {\r\n            consd.set(adj, consd.has(bot));\r\n        }\r\n        if (adjBot !== -1) {\r\n            halfedges[adjBot] = adj;\r\n        }\r\n        halfedges[top] = bot;\r\n        this.markFlip(edg);\r\n        this.markFlip(lft);\r\n        this.markFlip(adj);\r\n        this.markFlip(rgt);\r\n        // mark flips unconditionally\r\n        flips.add(bot);\r\n        consd.delete(bot);\r\n        flips.add(top);\r\n        consd.delete(top);\r\n        this.updateVert(edg);\r\n        this.updateVert(lft);\r\n        this.updateVert(adj);\r\n        this.updateVert(rgt);\r\n        return bot;\r\n    }\r\n    /**\r\n     * Whether the two triangles sharing edg conform to the Delaunay condition.\r\n     * As a shortcut, if the given edge has no adjacent (is on the hull), it is\r\n     * certainly Delaunay.\r\n     *\r\n     * @private\r\n     * @param edg The edge shared by the triangles to test.\r\n     * @return True if they are Delaunay.\r\n     */\r\n    isDelaunay(edg) {\r\n        const { triangles, halfedges } = this.del, adj = halfedges[edg];\r\n        if (adj === -1) {\r\n            return true;\r\n        }\r\n        const p1 = triangles[prevEdge(edg)], p2 = triangles[edg], p3 = triangles[nextEdge(edg)], px = triangles[prevEdge(adj)];\r\n        return !this.inCircle(p1, p2, p3, px);\r\n    }\r\n    /**\r\n     * Update the vertex -> incoming edge map.\r\n     *\r\n     * @private\r\n     * @param start The id of an *outgoing* edge.\r\n     * @return The id of the right-most incoming edge.\r\n     */\r\n    updateVert(start) {\r\n        const { triangles, halfedges } = this.del, vm = this.vertMap, v = triangles[start];\r\n        // When iterating over incoming edges around a vertex, we do so in\r\n        // clockwise order ('going left'). If the vertex lies on the hull, two\r\n        // of the edges will have no opposite, leaving a gap. If the starting\r\n        // incoming edge is not the right-most, we will miss edges between it\r\n        // and the gap. So walk counter-clockwise until we find an edge on the\r\n        // hull, or get back to where we started.\r\n        let inc = prevEdge(start), adj = halfedges[inc];\r\n        while (adj !== -1 && adj !== start) {\r\n            inc = prevEdge(adj);\r\n            adj = halfedges[inc];\r\n        }\r\n        vm[v] = inc;\r\n        return inc;\r\n    }\r\n    /**\r\n     * Whether the segment between [p1, p2] intersects with [p3, p4]. When the\r\n     * segments share an end-point (e.g. p1 == p3 etc.), they are not considered\r\n     * intersecting.\r\n     *\r\n     * @private\r\n     * @param p1 The index of point 1 into this.del.coords.\r\n     * @param p2 The index of point 2 into this.del.coords.\r\n     * @param p3 The index of point 3 into this.del.coords.\r\n     * @param p4 The index of point 4 into this.del.coords.\r\n     * @return True if the segments intersect.\r\n     */\r\n    intersectSegments(p1, p2, p3, p4) {\r\n        const pts = this.del.coords;\r\n        // If the segments share one of the end-points, they cannot intersect\r\n        // (provided the input is properly segmented, and the triangulation is\r\n        // correct), but intersectSegments will say that they do. We can catch\r\n        // it here already.\r\n        if (p1 === p3 || p1 === p4 || p2 === p3 || p2 === p4) {\r\n            return false;\r\n        }\r\n        return intersectSegments(pts[p1 * 2], pts[p1 * 2 + 1], pts[p2 * 2], pts[p2 * 2 + 1], pts[p3 * 2], pts[p3 * 2 + 1], pts[p4 * 2], pts[p4 * 2 + 1]);\r\n    }\r\n    /**\r\n     * Whether point px is in the circumcircle of the triangle formed by p1, p2,\r\n     * and p3 (which are in counter-clockwise order).\r\n     *\r\n     * @param p1 The index of point 1 into this.del.coords.\r\n     * @param p2 The index of point 2 into this.del.coords.\r\n     * @param p3 The index of point 3 into this.del.coords.\r\n     * @param px The index of point x into this.del.coords.\r\n     * @return True if (px, py) is in the circumcircle.\r\n     */\r\n    inCircle(p1, p2, p3, px) {\r\n        const pts = this.del.coords;\r\n        return (0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.incircle)(pts[p1 * 2], pts[p1 * 2 + 1], pts[p2 * 2], pts[p2 * 2 + 1], pts[p3 * 2], pts[p3 * 2 + 1], pts[px * 2], pts[px * 2 + 1]) < 0.0;\r\n    }\r\n    /**\r\n     * Whether point p1, p2, and p are collinear.\r\n     *\r\n     * @private\r\n     * @param p1 The index of segment point 1 into this.del.coords.\r\n     * @param p2 The index of segment point 2 into this.del.coords.\r\n     * @param p The index of the point p into this.del.coords.\r\n     * @return True if the points are collinear.\r\n     */\r\n    isCollinear(p1, p2, p) {\r\n        const pts = this.del.coords;\r\n        return (0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.orient2d)(pts[p1 * 2], pts[p1 * 2 + 1], pts[p2 * 2], pts[p2 * 2 + 1], pts[p * 2], pts[p * 2 + 1]) === 0.0;\r\n    }\r\n}\r\nConstrainautor.intersectSegments = intersectSegments;\r\n/**\r\n * Compute if two line segments [p1, p2] and [p3, p4] intersect.\r\n *\r\n * @name Constrainautor.intersectSegments\r\n * @source https://github.com/mikolalysenko/robust-segment-intersect\r\n * @param p1x The x coordinate of point 1 of the first segment.\r\n * @param p1y The y coordinate of point 1 of the first segment.\r\n * @param p2x The x coordinate of point 2 of the first segment.\r\n * @param p2y The y coordinate of point 2 of the first segment.\r\n * @param p3x The x coordinate of point 1 of the second segment.\r\n * @param p3y The y coordinate of point 1 of the second segment.\r\n * @param p4x The x coordinate of point 2 of the second segment.\r\n * @param p4y The y coordinate of point 2 of the second segment.\r\n * @return True if the line segments intersect.\r\n */\r\nfunction intersectSegments(p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\r\n    const x0 = (0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.orient2d)(p1x, p1y, p3x, p3y, p4x, p4y), y0 = (0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.orient2d)(p2x, p2y, p3x, p3y, p4x, p4y);\r\n    if ((x0 > 0 && y0 > 0) || (x0 < 0 && y0 < 0)) {\r\n        return false;\r\n    }\r\n    const x1 = (0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.orient2d)(p3x, p3y, p1x, p1y, p2x, p2y), y1 = (0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.orient2d)(p4x, p4y, p1x, p1y, p2x, p2y);\r\n    if ((x1 > 0 && y1 > 0) || (x1 < 0 && y1 < 0)) {\r\n        return false;\r\n    }\r\n    //Check for degenerate collinear case\r\n    if (x0 === 0 && y0 === 0 && x1 === 0 && y1 === 0) {\r\n        return !(Math.max(p3x, p4x) < Math.min(p1x, p2x) ||\r\n            Math.max(p1x, p2x) < Math.min(p3x, p4x) ||\r\n            Math.max(p3y, p4y) < Math.min(p1y, p2y) ||\r\n            Math.max(p1y, p2y) < Math.min(p3y, p4y));\r\n    }\r\n    return true;\r\n}\n\n\n\n\n//# sourceURL=webpack://islands/./node_modules/@kninnug/constrainautor/lib/Constrainautor.mjs?");

/***/ }),

/***/ "./node_modules/delaunator/index.js":
/*!******************************************!*\
  !*** ./node_modules/delaunator/index.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Delaunator)\n/* harmony export */ });\n/* harmony import */ var robust_predicates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! robust-predicates */ \"./node_modules/robust-predicates/index.js\");\n\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\n\n\nclass Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if ((0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.orient2d)(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], (0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.orient2d)(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], (0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.orient2d)(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], (0,robust_predicates__WEBPACK_IMPORTED_MODULE_0__.orient2d)(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n\n\n//# sourceURL=webpack://islands/./node_modules/delaunator/index.js?");

/***/ }),

/***/ "./node_modules/robust-predicates/esm/incircle.js":
/*!********************************************************!*\
  !*** ./node_modules/robust-predicates/esm/incircle.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"incircle\": () => (/* binding */ incircle),\n/* harmony export */   \"incirclefast\": () => (/* binding */ incirclefast)\n/* harmony export */ });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.js */ \"./node_modules/robust-predicates/esm/util.js\");\n\n\nconst iccerrboundA = (10 + 96 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\nconst iccerrboundB = (4 + 48 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\nconst iccerrboundC = (44 + 576 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\n\nconst bc = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst ca = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst ab = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst aa = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst bb = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst cc = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst u = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst v = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst axtbc = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst aytbc = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst bxtca = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst bytca = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst cxtab = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst cytab = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst abt = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst bct = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst cat = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst abtt = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst bctt = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst catt = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\n\nconst _8 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst _16 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(16);\nconst _16b = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(16);\nconst _16c = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(16);\nconst _32 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(32);\nconst _32b = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(32);\nconst _48 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(48);\nconst _64 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(64);\n\nlet fin = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(1152);\nlet fin2 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bc, adx, _8), _8, adx, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ca, bdx, _8), _8, bdx, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ab, cdx, _8), _8, cdx, _16), _16,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.estimate)(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + _util_js__WEBPACK_IMPORTED_MODULE_0__.resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(axtbclen, axtbc, 2 * adx, _16), _16,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(aytbclen, aytbc, 2 * ady, _16), _16,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bytcalen, bytca, 2 * bdy, _16), _16,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(cxtablen, cxtab, 2 * cdx, _16), _16,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(cytablen, cytab, 2 * cdy, _16), _16,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(axtbclen, axtbc, adxtail, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, 2 * adx, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, adxtail, _16b), _16b,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(aytbclen, aytbc, adytail, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, 2 * ady, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, adytail, _16b), _16b,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bxtcalen, bxtca, bdxtail, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, 2 * bdx, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, bdxtail, _16b), _16b,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bytcalen, bytca, bdytail, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, 2 * bdy, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, bdytail, _16b), _16b,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(cxtablen, cxtab, cdxtail, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, 2 * cdx, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, cdxtail, _16b), _16b,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(cytablen, cytab, cdytail, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, 2 * cdy, _16), _16,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len2, _8, cdytail, _16b), _16b,\n                (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nfunction incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nfunction incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n\n\n//# sourceURL=webpack://islands/./node_modules/robust-predicates/esm/incircle.js?");

/***/ }),

/***/ "./node_modules/robust-predicates/esm/insphere.js":
/*!********************************************************!*\
  !*** ./node_modules/robust-predicates/esm/insphere.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"insphere\": () => (/* binding */ insphere),\n/* harmony export */   \"inspherefast\": () => (/* binding */ inspherefast)\n/* harmony export */ });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.js */ \"./node_modules/robust-predicates/esm/util.js\");\n\n\nconst isperrboundA = (16 + 224 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\nconst isperrboundB = (5 + 72 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\nconst isperrboundC = (71 + 1408 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\n\nconst ab = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst bc = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst cd = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst de = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst ea = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst ac = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst bd = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst ce = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst da = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst eb = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\n\nconst abc = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst bcd = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst cde = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst dea = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst eab = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst abd = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst bce = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst cda = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst deb = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst eac = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\n\nconst adet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(1152);\nconst bdet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(1152);\nconst cdet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(1152);\nconst ddet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(1152);\nconst edet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(1152);\nconst abdet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(2304);\nconst cddet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(2304);\nconst cdedet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(3456);\nconst deter = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(5760);\n\nconst _8 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst _8b = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst _8c = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst _16 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(16);\nconst _24 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(24);\nconst _48 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(48);\nconst _48b = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(48);\nconst _96 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(96);\nconst _192 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(192);\nconst _384x = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(384);\nconst _384y = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(384);\nconst _384z = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(384);\nconst _768 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, a, az, _8), _8,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, b, bz, _8b), _8b,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(alen, a, blen, b, _48), _48,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.negate)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _96, x, _192), _192, x, _384x), _384x,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _96, y, _192), _192, y, _384y), _384y,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(96);\nconst ydet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(96);\nconst zdet = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(96);\nconst fin = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum_three)(\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _24, x, _48), _48, x, xdet), xdet,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _24, y, _48), _48, y, ydet), ydet,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.negate)(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.negate)(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.estimate)(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + _util_js__WEBPACK_IMPORTED_MODULE_0__.resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nfunction insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det = (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey);\n    const bexaeyplus = Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey);\n    const cexbeyplus = Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey);\n    const dexceyplus = Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey);\n    const aexdeyplus = Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey);\n    const cexaeyplus = Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey);\n    const dexbeyplus = Math.abs(dexbey);\n    const permanent =\n        ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift +\n        ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift +\n        ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift +\n        ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nfunction inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n\n\n//# sourceURL=webpack://islands/./node_modules/robust-predicates/esm/insphere.js?");

/***/ }),

/***/ "./node_modules/robust-predicates/esm/orient2d.js":
/*!********************************************************!*\
  !*** ./node_modules/robust-predicates/esm/orient2d.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"orient2d\": () => (/* binding */ orient2d),\n/* harmony export */   \"orient2dfast\": () => (/* binding */ orient2dfast)\n/* harmony export */ });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.js */ \"./node_modules/robust-predicates/esm/util.js\");\n\n\nconst ccwerrboundA = (3 + 16 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\nconst ccwerrboundB = (2 + 12 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\nconst ccwerrboundC = (9 + 64 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\n\nconst B = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst C1 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst C2 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(12);\nconst D = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(16);\nconst u = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.estimate)(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + _util_js__WEBPACK_IMPORTED_MODULE_0__.resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nfunction orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nfunction orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n\n\n//# sourceURL=webpack://islands/./node_modules/robust-predicates/esm/orient2d.js?");

/***/ }),

/***/ "./node_modules/robust-predicates/esm/orient3d.js":
/*!********************************************************!*\
  !*** ./node_modules/robust-predicates/esm/orient3d.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"orient3d\": () => (/* binding */ orient3d),\n/* harmony export */   \"orient3dfast\": () => (/* binding */ orient3dfast)\n/* harmony export */ });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.js */ \"./node_modules/robust-predicates/esm/util.js\");\n\n\nconst o3derrboundA = (7 + 56 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\nconst o3derrboundB = (3 + 28 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\nconst o3derrboundC = (26 + 288 * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon * _util_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;\n\nconst bc = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst ca = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst ab = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst at_b = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst at_c = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst bt_c = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst bt_a = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst ct_a = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst ct_b = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\nconst bct = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst cat = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst abt = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst u = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(4);\n\nconst _8 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst _8b = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst _16 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(8);\nconst _12 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(12);\n\nlet fin = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(192);\nlet fin2 = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.vec)(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = _util_js__WEBPACK_IMPORTED_MODULE_0__.splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bc, adz, _8), _8,\n            (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ca, bdz, _8b), _8b, _16), _16,\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ab, cdz, _8), _8, fin);\n\n    let det = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.estimate)(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + _util_js__WEBPACK_IMPORTED_MODULE_0__.resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bctlen, bct, adz, _16), _16);\n\n    const catlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(catlen, cat, bdz, _16), _16);\n\n    const abtlen = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.sum)(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.scale)(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nfunction orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nfunction orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n\n\n//# sourceURL=webpack://islands/./node_modules/robust-predicates/esm/orient3d.js?");

/***/ }),

/***/ "./node_modules/robust-predicates/esm/util.js":
/*!****************************************************!*\
  !*** ./node_modules/robust-predicates/esm/util.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"epsilon\": () => (/* binding */ epsilon),\n/* harmony export */   \"estimate\": () => (/* binding */ estimate),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"resulterrbound\": () => (/* binding */ resulterrbound),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"splitter\": () => (/* binding */ splitter),\n/* harmony export */   \"sum\": () => (/* binding */ sum),\n/* harmony export */   \"sum_three\": () => (/* binding */ sum_three),\n/* harmony export */   \"vec\": () => (/* binding */ vec)\n/* harmony export */ });\nconst epsilon = 1.1102230246251565e-16;\nconst splitter = 134217729;\nconst resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nfunction sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nfunction sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nfunction scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nfunction negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nfunction estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nfunction vec(n) {\n    return new Float64Array(n);\n}\n\n\n//# sourceURL=webpack://islands/./node_modules/robust-predicates/esm/util.js?");

/***/ }),

/***/ "./node_modules/robust-predicates/index.js":
/*!*************************************************!*\
  !*** ./node_modules/robust-predicates/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"incircle\": () => (/* reexport safe */ _esm_incircle_js__WEBPACK_IMPORTED_MODULE_2__.incircle),\n/* harmony export */   \"incirclefast\": () => (/* reexport safe */ _esm_incircle_js__WEBPACK_IMPORTED_MODULE_2__.incirclefast),\n/* harmony export */   \"insphere\": () => (/* reexport safe */ _esm_insphere_js__WEBPACK_IMPORTED_MODULE_3__.insphere),\n/* harmony export */   \"inspherefast\": () => (/* reexport safe */ _esm_insphere_js__WEBPACK_IMPORTED_MODULE_3__.inspherefast),\n/* harmony export */   \"orient2d\": () => (/* reexport safe */ _esm_orient2d_js__WEBPACK_IMPORTED_MODULE_0__.orient2d),\n/* harmony export */   \"orient2dfast\": () => (/* reexport safe */ _esm_orient2d_js__WEBPACK_IMPORTED_MODULE_0__.orient2dfast),\n/* harmony export */   \"orient3d\": () => (/* reexport safe */ _esm_orient3d_js__WEBPACK_IMPORTED_MODULE_1__.orient3d),\n/* harmony export */   \"orient3dfast\": () => (/* reexport safe */ _esm_orient3d_js__WEBPACK_IMPORTED_MODULE_1__.orient3dfast)\n/* harmony export */ });\n/* harmony import */ var _esm_orient2d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./esm/orient2d.js */ \"./node_modules/robust-predicates/esm/orient2d.js\");\n/* harmony import */ var _esm_orient3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./esm/orient3d.js */ \"./node_modules/robust-predicates/esm/orient3d.js\");\n/* harmony import */ var _esm_incircle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./esm/incircle.js */ \"./node_modules/robust-predicates/esm/incircle.js\");\n/* harmony import */ var _esm_insphere_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./esm/insphere.js */ \"./node_modules/robust-predicates/esm/insphere.js\");\n\n\n\n\n\n\n\n//# sourceURL=webpack://islands/./node_modules/robust-predicates/index.js?");

/***/ })

}]);